{"version":3,"sources":["components/InputNewItem.js","components/Item.js","components/Cart.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","addNewItem","newItemName","newItemPrice","newItemCategory","newItemImage","type","payload","name","price","category","image","useState","setNewItemName","setNewItemPrice","setNewItemCategory","setNewItemImage","setErrorMessage","className","htmlFor","onChange","e","target","value","id","onClick","addToCart","item","deleteFromMenu","props","src","alt","width","subtract","add","quantity","subtotal","state","items","cart","total","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","solveTotal","cartItems","cartItem","reducer","cartCopy","itemsCopy","deletedItems","action","push","cloneDeep","exists","console","log","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5edf5b26.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport './InputNewItem.css';\r\n\r\nconst InputNewItem = ({ addNewItem }) => {\r\n    const [newItemName, setNewItemName] = useState('')\r\n    const [newItemPrice, setNewItemPrice] = useState('')\r\n    const [newItemCategory, setNewItemCategory] = useState('')\r\n    const [newItemImage, setNewItemImage] = useState('')\r\n    const [, setErrorMessage] = useState('');\r\n\r\n    const newItemNameEventHandler = (e) => {\r\n        setNewItemName(e.target.value);\r\n    }\r\n\r\n    const newItemPriceEventHandler = (e) => {\r\n        setNewItemPrice(e.target.value);\r\n    }\r\n\r\n    const newItemCategoryEventHandler = (e) => {\r\n        setNewItemCategory(e.target.value);\r\n    }\r\n\r\n    const newItemImageEventHandler = (e) => {\r\n        setNewItemImage(e.target.value);\r\n    }\r\n\r\n    const validate = () => {\r\n        if (newItemName === '' || newItemPrice === '' || newItemImage === '') {\r\n            setErrorMessage('Details must be complete.');\r\n        } else if (newItemCategory === '') {\r\n            setErrorMessage('Select a category.');\r\n        } else {\r\n            addNewItem(newItemName, newItemPrice, newItemCategory, newItemImage);\r\n            setErrorMessage('');\r\n            setNewItemName('');\r\n            setNewItemPrice('');\r\n            setNewItemCategory('');\r\n            setNewItemImage('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h4>Would you like to add a new item on the menu?</h4>\r\n            <form>\r\n                <label className=\"label\" htmlFor=\"newItemName\">Item Name: </label>\r\n                <input className=\"input\" type=\"text\" name=\"newItemName\" onChange={newItemNameEventHandler} value={newItemName} /> <br />\r\n\r\n                <label className=\"label\" htmlFor=\"newItemPrice\">Price: </label>\r\n                <input className=\"input\" type=\"text\" name=\"newItemPrice\" onChange={newItemPriceEventHandler} value={newItemPrice} /> <br />\r\n\r\n                <label className=\"label\" htmlFor=\"newItemCategory\">Category: </label>\r\n                <select id=\"category\" name=\"newItemCategory\" onChange={newItemCategoryEventHandler} value={newItemCategory}>\r\n                    <option value=\"\">Select Category...</option>\r\n                    <option value=\"All\" className=\"options\">All</option>\r\n                    <option value=\"Food\" className=\"options\">Food</option>\r\n                    <option value=\"Drink\" className=\"options\">Drink</option>\r\n                    <option value=\"Dessert\" className=\"options\">Dessert</option>\r\n                </select> <br />\r\n\r\n                <label className=\"label\" htmlFor=\"newItemImage\">Image URL: </label>\r\n                <input className=\"input\" type=\"text\" name=\"newItemImage\" onChange={newItemImageEventHandler} value={newItemImage} /> <br />\r\n\r\n                <button id=\"addBtn\" type=\"button\" onClick={() => validate()}>Add Item</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewItem: (newItemName, newItemPrice, newItemCategory, newItemImage) => dispatch({ type: 'ADD_NEW_ITEM', payload: { name: newItemName, price: newItemPrice, category: newItemCategory, image: newItemImage } })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(InputNewItem);","import './Item.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Item = (props) => {\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            <img src={props.item.image} alt={props.item.name} width={80} />\r\n            <div className=\"item-description\">\r\n                <h4>{props.item.name}</h4>\r\n                <p>â‚±{props.item.price}</p>\r\n                <button onClick={() => props.addToCart(props.item)} id=\"order-btn\">order</button>\r\n                <button onClick={() => props.deleteFromMenu(props.item)} id=\"delete-btn\">delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: item => dispatch({ type: 'ADD_TO_CART', payload: item }),\r\n        deleteFromMenu: item => dispatch({ type: 'DELETE_FROM_MENU', payload: item })\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Item);","import './Cart.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Cart = (props) => {\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <img src={props.item.image} alt={props.item.name} className='item-image' />\r\n            <div className=\"item-details\">\r\n                <h4>{props.item.name}</h4>\r\n                <p>â‚±{props.item.price}</p>\r\n                <button className=\"qtyBtn\" onClick={() => props.subtract(props.item)}>-</button>\r\n                <strong> Qty: {props.item.quantity} </strong>\r\n                <button className=\"qtyBtn\" onClick={() => props.add(props.item)}>+</button>\r\n            </div>\r\n            <div className=\"subtotal\">\r\n                <span><strong>Subtotal</strong> â‚±{props.item.subtotal}</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        subtract: (item) => dispatch({ type: 'SUBTRACT_QUANTITY', payload: item }),\r\n        add: (item) => dispatch({ type: 'ADD_QUANTITY', payload: item })\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Cart);","import './App.css';\r\nimport InputNewItem from './components/InputNewItem';\r\nimport Item from './components/Item';\r\nimport Cart from './components/Cart';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"body\">\r\n      <h1 id=\"title\">RESTO APP</h1>\r\n      <div className=\"contents\">\r\n        <div className=\"input-container\">\r\n          <InputNewItem />\r\n        </div>\r\n        <div className=\"menu\">\r\n          <h2>MENU</h2>\r\n          <div className=\"items-container\">\r\n            {props.items.map(item => {\r\n              return <Item key={item.id} item={item} />\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"cart-container\">\r\n          <h3>Your Shopping Cart</h3>\r\n          {\r\n            props.cart.map(item => {\r\n              return <Cart key={item.id} item={item} />\r\n            })\r\n          }\r\n          <h4 className=\"total\">Total: â‚±{props.total}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.items,\r\n    cart: state.cart,\r\n    total: state.total\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { cloneDeep } from 'lodash';\r\n\r\nconst initialState = {\r\n    items: [\r\n        {\r\n            id: 1,\r\n            name: \"Burger\",\r\n            price: 50,\r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Pizza\",\r\n            price: 100,\r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Fries\",\r\n            price: 25,\r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Coffee\",\r\n            price: 35,\r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Iced Tea\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Hot Tea\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\r\n        },\r\n    ],\r\n    cart: [],\r\n    total: 0\r\n}\r\n\r\nconst solveTotal = (cartItems) => {\r\n    let total = 0;\r\n    cartItems.map(cartItem => {\r\n        cartItem.subtotal = cartItem.price * cartItem.quantity\r\n        total += cartItem.subtotal;\r\n    });\r\n\r\n    return total;\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let item;\r\n    let total;\r\n    let cartCopy;\r\n    let itemsCopy;\r\n    let deletedItems;\r\n\r\n    switch (action.type) {\r\n        case 'ADD_NEW_ITEM':\r\n            itemsCopy = [...state.items]\r\n            itemsCopy.push({\r\n                name: action.payload.name,\r\n                price: action.payload.price,\r\n                category: action.payload.category,\r\n                image: action.payload.image,\r\n            })\r\n            return {\r\n                ...state,\r\n                items: cloneDeep(itemsCopy),\r\n            }\r\n        case 'ADD_TO_CART':\r\n            item = action.payload;\r\n            cartCopy = cloneDeep(state.cart);\r\n\r\n            let exists = false;\r\n            cartCopy = cartCopy.map(cartItem => {\r\n                if (cartItem.id === item.id) {\r\n                    cartItem.quantity++;\r\n                    exists = true;\r\n                }\r\n                return cartItem;\r\n            });\r\n\r\n            if (exists === false) {\r\n                item.quantity = 1;\r\n                cartCopy.push(item);\r\n            };\r\n\r\n            total = solveTotal(cartCopy);\r\n\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: total\r\n            }\r\n        case 'DELETE_FROM_MENU':\r\n            deletedItems = [...state.items]\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                items: deletedItems.filter(item => item !== action.payload)\r\n            }\r\n        case 'SUBTRACT_QUANTITY':\r\n            item = action.payload;\r\n            cartCopy = [...state.cart]\r\n            if (cartCopy) {\r\n                item.quantity--;\r\n            }\r\n            if (item.quantity === 0) {\r\n                cartCopy = cartCopy.filter(cartItem => {\r\n                    return (cartItem.id !== item.id)\r\n                })\r\n            }\r\n\r\n            total = solveTotal(cartCopy);\r\n            return {\r\n                ...state,\r\n                cart: cloneDeep(cartCopy),\r\n                total: total\r\n            }\r\n        case 'ADD_QUANTITY':\r\n            item = action.payload;\r\n            cartCopy = [...state.cart]\r\n            if (cartCopy) {\r\n                item.quantity += 1;\r\n            }\r\n            total = solveTotal(cartCopy);\r\n            return {\r\n                ...state,\r\n                cart: cloneDeep(cartCopy),\r\n                total: total\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}